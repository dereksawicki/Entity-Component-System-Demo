Goal of this project: 
-learn more about event queue's, component architecture, and factory classes
-have player fly spaceship around. Bump into different items to trigger events and switch out components


TODO:
-[x]create actor class
-[x]create actor factory
-[x]create drawable interface
-[x]create renderer
-[x]render player

{
-create controllable interface
-create player controls implementation of that interface
-control player
} Going with super simple input handling for now.

*actor should have a component for user input, for its sprite, and the user should be able to fly a ship around.

-------

-OnInit function becoming more and more desirable...

-[x] collision system
-[x] pick ups appear, collisions registering.
-[x]on colliding with pickup, apply its effects to the player, and destroy it.

NEXT:
-Collision system should send event to event queue, which dispatches to pickup system.
-pickup system is responsible for managing pickups. It creates them, handles pickup related events, destroys them.
-Audio system, play sound when grabbing a pickup

-should move things into an entity manager at some point


*actor should be able to run into different colorred items, taking on the color of the item it runs into


